# The db name
database = hca

# The factor by which to multiply each value in the output.
# This is divided by the text length, so for example if your text
# has 70000 words, 100000 would be a good value
factor = 100000

# The window width
n = 5

# The csv output filename
csv = haltest.csv.txt

# The similarity_csv output filename If enabled, mqlhal(1) will
# compute the cosine similarity between all pairs of rows in the HAL,
# and save it to the CSV file named by the "similarity_csv"
# configuration variable.
#
# Note that computing the cosine similarity can take a very long time
# if the HAL space is large.
#similarity_csv = haltest.similarity_csv.csv

# The value-vector output filename
output = haltest.out.txt

# The maximum number of values in each value-vector
max_values = 20

# Place the words here, one word-key per word, e.g.:
word = mother
word = child
word = flower

# Place words which should be emitted as rows in the CSV file here.
# Comment all of these out to emit all rows.
#csv_word = mother
#csv_word = child
#csv_word = flower
